import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from config_reader import config
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=config.bot_token.get_secret_value())
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()
mylist = []


async def cmd_start(message: types.Message):
    await message.answer("Hiiiii! ^_^")


async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


async def cmd_test1(message: types.Message):
    await message.reply("Test 1")


async def cmd_test2(message: types.Message):
    await message.reply("Test 2")


@dp.message(commands=["create_list"])
async def cmd_create_list(message: types.Message):
    mylist = []
    await message.answer("–°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω")


@dp.message(commands=["add_to_list"])
async def cmd_add_to_list(message: types.Message, number: int):
    mylist.append(number)
    await message.answer("–î–æ–±–∞–≤–ª–µ–Ω–æ —á–∏—Å–ª–æ", number)


@dp.message(commands=["show_list"])
async def cmd_show_list(message: types.Message):
    await message.answer(f"–í–∞—à —Å–ø–∏—Å–æ–∫: {mylist}")


@dp.message(commands=["clear_list"])
async def cmd_clear_list(message: types.Message):
    mylist.clear()
    await message.answer("–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤


async def main():
    dp.message.register(cmd_start, commands=["start"])
    dp.message.register(cmd_dice, commands=["dice"])
    dp.message.register(cmd_test1, commands=["test1"])
    dp.message.register(cmd_test2, commands=["test2"])
    await dp.start_polling(bot)
if __name__ == "__main__":
    asyncio.run(main())
